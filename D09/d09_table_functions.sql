-- creazione tipo riga e tipo tabella
drop type t_tabella_tf;
drop type t_riga_tf;

create type t_riga_tf as object (
  id           number,
  descrizione  varchar2(50)
);
/

create type t_tabella_tf is table of t_riga_tf;
/

--  table function
create or replace function get_tabella_tf (p_num_righe in number) return t_tabella_tf as
  l_tab  t_tabella_tf := t_tabella_tf();
begin
  for i in 1 .. p_num_righe loop
    l_tab.extend;
    l_tab(l_tab.last) := t_riga_tf(i, 'Descrizione per ' || i);
  end loop;

  return l_tab;
end;
/


select *
from   table(get_tabella_tf(10))
order by id desc;

select *
from   get_tabella_tf(10)
order by id desc;

-- pipelined  table function
create or replace function get_tabella_ptf (p_num_righe in number) return t_tabella_tf pipelined as
begin
  for i in 1 .. p_num_righe loop
    pipe row(t_riga_tf(i, 'Descrizione per ' || i));   
  end loop;

  return;
end;
/

select *
from   table(get_tabella_ptf(10))
order by id desc;

select *
from   get_tabella_ptf(10)
order by id desc;


create type t_riga_tf as object (
  id           number,
  descrizione  varchar2(50)
);

create table d09_tabella (
    id                             number generated by default on null as identity 
                                   constraint d09_tabella_id_pk primary key,
    descrizione                    varchar2(50 char)
)
;

insert into d09_tabella (descrizione)
select 'Descrizione per '|| level descrizione from dual connect by level <=10

-- pipelined  table function
create or replace function d09_get_tabella_ptf (p_max_id in number) return t_tabella_tf pipelined as
begin
  for c in (select id,descrizione from d09_tabella where id <= p_max_id) loop
    pipe row(t_riga_tf(c.id, c.descrizione));   
  end loop;

  return;
end;
/

select *
from   table(d09_get_tabella_ptf(3))
order by id desc;

select *
from   d09_get_tabella_ptf(3)
order by id desc;